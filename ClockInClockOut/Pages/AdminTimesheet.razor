@page "/AdminTimesheet"
@attribute [Authorize]
@inject IRecordServices RecordServices
@inject NavigationManager NavigationManager

<h3>Admin-Timesheet</h3>

<EditForm Model="employee" OnSubmit="HandleSubmit">
    <label for="IdNumber"<b>4 Digit Code:</b></label>
    <InputNumber id="IdNumber" @bind-Value="employee.IdNumber" class="input" placeholder = "type 0 to search all"></InputNumber>
    <label for="FirstDateRange"><b>From:</b></label>
    <InputDate id="FirstDateRange" @bind-Value="FirstDateRange" class="input"></InputDate>
    <label for="SecondDateRange"><b>To:</b></label>
    <InputDate id="SecondDateRange" @bind-Value="SecondDateRange" class="input"></InputDate>
</EditForm>
<table class="table">
    <thead>
        <tr>
            <th>Employee ID</th>
            <th>Name</th>
            <th>Clock In Time</th>
            <th>Clock OUT Time</th>
            <th>Hours Worked</th>
        </tr>
    </thead>

    <tbody>
        <!--list record for filtering ID,From,To-->
        @if (employee.IdNumber > 0)
        {
            @foreach (var record in RecordServices.Records)
            {
                <tr>
                    @if (record.IdNumber == employee.IdNumber && FirstDateRange <= record.ClockInTime && SecondDateRange.AddDays(1) >= record.ClockInTime)
                    {
                        <td>@record.IdNumber</td>
                        <td>@record.EmployeeName</td>
                        <td>@record.ClockInTime</td>
                        <td>@record.ClockOutTime</td>
                        <td>@record.TotalHoursWorked</td>
                        <td>
                            <button class="btn btn-primary" @onclick="(()=> ShowRecord(record.ItemNumber))">
                                <i class="oi oi-pencil"></i>
                            </button>
                        </td>
                    }
                </tr>
            }
        }
        else
        {
            <!--list record for filtering From,To-->
            @foreach (var record in RecordServices.Records)
            {
                <tr>
                    @if (record.IdNumber != employee.IdNumber && FirstDateRange <= record.ClockInTime && SecondDateRange.AddDays(1) >= record.ClockInTime)
                    {
                        <td>@record.IdNumber</td>
                        <td>@record.EmployeeName</td>
                        <td>@record.ClockInTime</td>
                        <td>@record.ClockOutTime</td>
                        <td>@Math.Round(record.TotalHoursWorked,2)</td>
                        <td>
                            <button class="btn btn-primary" @onclick="(()=> ShowRecord(record.ItemNumber))">
                                <i class="oi oi-pencil"></i>
                            </button>
                        </td>
                    }
                </tr>
            }
        }
    </tbody>
</table>
<button class="btn btn-primary" @onclick="CreateNewRecord">Create New Record</button>

@code {
    Employee employee = new Employee();
    Record record = new Record();
    DateTime FirstDateRange = DateTime.Today.Date;
    DateTime SecondDateRange = DateTime.Today.Date;

    protected override async Task OnInitializedAsync()
    {
        await RecordServices.LoadRecord();
    }
    async Task HandleSubmit()
    {
        this.record = new Record();
        await RecordServices.LoadRecord();
    }
    void ShowRecord(int ItemNumber)
    {
        NavigationManager.NavigateTo($"RecordsCRUD/{ItemNumber}");

    }
    void CreateNewRecord()
    {
        NavigationManager.NavigateTo("RecordsCRUD");
    }
}