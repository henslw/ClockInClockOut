@page "/Records"
@inject IRecordServices RecordServices
@inject NavigationManager NavigationManager
<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- Add icon library -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
 <style>

.header{
padding: 12px;
text-align: center;
font-family: Arial;
font-size: 12px;
color: Black;
border-radius: 25px;
background-color: #1569C7;
width: 100%;
}


.header h1 {
  position: center;
  width: 100%;
  top: 12px;
  left: 6px;
}

.btn-primary {
  background-color: #1569C7;
  color: black;
  font-size: 16px;
  padding: 20px;
  position: relative;
  left:0px;
  border-radius: 25px;
  text-align: center;
  /*display: inline-block;*/
  /*margin: 20px;*/
  transition-duration: 0.3s
        
   }

    /* Darker background on mouse-over */
.btn-primary:hover {                    /* Use the :hover selector to change the style of the button when you move the mouse over it. */
  background-color: #2860DE;
  border: 2px solid #008CBA;
  color: white;
  }

</style>
</head>

<div class= "header">
  <h1><b>Records</b></h1>
</div> <br>


<EditForm Model="record" OnSubmit="HandleSubmit">
        <label for="FirstDateRange"><b>From:</b></label>
        <InputDate id="FirstDateRange" @bind-Value="FirstDateRange" class="input"></InputDate>
        <label for="SecondDateRange"><b>To:</b></label>
        <InputDate id="SecondDateRange" @bind-Value="SecondDateRange" class="input"></InputDate>
        <button type="submit" class="button3">Search</button>

</EditForm> 
<table class="table">
        <thead>
            <tr>
                <th>ID Number</th>
                <th>Employee Name</th>
                <th>Clock In Time</th>
                <th>Clock OUT Time</th>
                <th>Hours Worked</th>
            </tr>


        </thead>

        <tbody>
        @foreach (var record in RecordServices.Records)
        {
            <tr>
                @if (FirstDateRange <= record.ClockInTime && SecondDateRange.AddDays(1) >= record.ClockInTime)
                {
                    <td>@record.IdNumber</td>
                    <td>@record.EmployeeName</td>
                    <td>@record.ClockInTime</td>
                    <td>@record.ClockOutTime</td>
                    <td>@record.TotalHoursWorked</td>
                    <td>
                        <button class="btn btn-primary" @onclick ="(()=> ShowRecord(record.ItemNumber))" >
                            <i class="oi oi-pencil"></i>
                        </button>
                    </td>
                }
            </tr>
        }
        </tbody>
</table>  
<button class="btn btn-primary"@onclick="CreateNewRecord"><b>Create New Record</b></button>

@code {
    Record record = new Record();
    DateTime FirstDateRange = DateTime.Today.Date;
    DateTime SecondDateRange = DateTime.Today.Date;

    async Task HandleSubmit()
    {
        await RecordServices.LoadRecord();
    }
    void ShowRecord(int ItemNumber)
    {
        NavigationManager.NavigateTo($"RecordsCRUD/{ItemNumber}");

    }
    void CreateNewRecord()
    {
        NavigationManager.NavigateTo("RecordsCRUD");
    }

    private async void HandleValidSubmit()
    {
        await RecordServices.LoadRecord();
    }

}